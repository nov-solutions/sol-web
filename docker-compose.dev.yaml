volumes:
  pgdata:

services:
  nextjs:
    restart: always
    depends_on:
      - django
      - tailwind-watcher
    build:
      context: .
      dockerfile: Dockerfile.nextjs-dev
    expose:
      - 3000
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - WATCHPACK_POLLING=true
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  django:
    restart: always
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.django
    expose:
      - 8000
    volumes:
      - .:/app
    env_file:
      - .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  tailwind-watcher:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile.tailwind-watcher
    volumes:
      - .:/app
    tty: true
    stop_grace_period: 0s
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    restart: always
    depends_on:
      - django
      - nextjs
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    restart: always
    image: postgres:12.0-alpine
    healthcheck:
      interval: 5s
      retries: 5
      test:
        - CMD-SHELL
        - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      timeout: 5s
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"
