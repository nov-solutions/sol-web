volumes:
  pgdata:

services:
  nextjs:
    container_name: newsolwebapp-web-nextjs
    restart: always
    build:
      context: ./nextjs
      dockerfile: Dockerfile.nextjs
      target: dev
    expose:
      - 3000
    environment:
      ENVIRONMENT: dev
      NEXT_PUBLIC_SITE_NAME: sol
      NEXT_PUBLIC_SITE_BASE_DOMAIN: http://localhost
    depends_on:
      - django
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://nextjs:3000"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  django:
    container_name: newsolwebapp-web-django
    restart: always
    build:
      context: ./web
      dockerfile: Dockerfile.django
      target: dev
    image: newsolwebapp-django:dev
    expose:
      - 8000
    env_file:
      - .env
    environment:
      ENVIRONMENT: dev
      SITE_DOMAIN: localhost
      SECRET_KEY: sfsado947u234hhjsdlfqsadf
      NEXT_PUBLIC_SITE_BASE_DOMAIN: http://localhost
      DJANGO_SETTINGS_MODULE: settings
      POSTGRES_DB: soldb
      POSTGRES_USER: soluser
      POSTGRES_PASSWORD: solsecretpass
      REDIS_PASSWORD: solsecretpassredis
      REDIS_HOST: redis
      EMAIL_HOST: smtp.sendgrid.net
      EMAIL_HOST_USER: thatcher@grav.solutions
      SENTRY_DSN: https://41ef1b7c8933eff59d081bbb720fb5b8@o4508878567440389.ingest.us.sentry.io/4508878589657088
    depends_on:
      - postgres

    logging:
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    container_name: newsolwebapp-web-nginx
    restart: always
    depends_on:
      - django
      - nextjs
    build:
      context: .
      dockerfile: Dockerfile.nginx
      target: dev
    ports:
      - 80:80
      - 443:443
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    container_name: newsolwebapp-web-postgres
    restart: always
    image: postgres:17-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U soluser -d soldb"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    expose:
      - 5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: soldb
      POSTGRES_USER: soluser
      POSTGRES_PASSWORD: solsecretpass
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    container_name: newsolwebapp-redis
    restart: always
    image: redis:7-alpine
    command: >
      --requirepass ${REDIS_PASSWORD}
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      REDIS_PASSWORD: solsecretpassredis
      REDIS_HOST: redis
  scheduler:
    container_name: newsolwebapp-scheduler
    image: newsolwebapp-django:dev
    restart: always
    command: celery -A celeryapp.celery:app beat -S redbeat.RedBeatScheduler --loglevel=info
    depends_on:
      django:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  worker:
    container_name: newsolwebapp-worker
    image: newsolwebapp-django:dev
    restart: always
    command: celery -A celeryapp.celery:app worker --loglevel=info
    depends_on:
      django:
        condition: service_healthy
