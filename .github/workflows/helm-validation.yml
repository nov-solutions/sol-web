name: Helm Chart Validation

on:
  push:
    paths:
      - 'helm/**'
      - '.github/workflows/helm-validation.yml'
  pull_request:
    paths:
      - 'helm/**'
      - '.github/workflows/helm-validation.yml'

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.13.0'

    - name: Add Helm repositories
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo update

    - name: Update Helm dependencies
      run: |
        cd helm
        helm dependency update

    - name: Lint Helm chart
      run: |
        helm lint ./helm

    - name: Install kubeconform
      run: |
        wget https://github.com/yannh/kubeconform/releases/download/v0.6.4/kubeconform-linux-amd64.tar.gz
        tar xf kubeconform-linux-amd64.tar.gz
        sudo mv kubeconform /usr/local/bin

    - name: Validate Helm templates with kubeconform
      run: |
        helm template test-release ./helm | kubeconform -summary -strict -verbose

    - name: Install kube-score
      run: |
        wget https://github.com/zegl/kube-score/releases/download/v1.18.0/kube-score_1.18.0_linux_amd64.tar.gz
        tar xf kube-score_1.18.0_linux_amd64.tar.gz
        sudo mv kube-score /usr/local/bin/
        sudo chmod +x /usr/local/bin/kube-score

    - name: Run kube-score
      run: |
        helm template test-release ./helm | kube-score score - || true

    - name: Test Helm chart with different values
      run: |
        # Test with default values
        helm template test-release ./helm > /tmp/default.yaml
        echo "✓ Default values validated"

        # Test with PostgreSQL disabled
        helm template test-release ./helm --set postgresql.enabled=false > /tmp/no-postgres.yaml
        echo "✓ External database configuration validated"

        # Test with ingress disabled
        helm template test-release ./helm --set ingress.enabled=false > /tmp/no-ingress.yaml
        echo "✓ No ingress configuration validated"

        # Test with minimal resources
        helm template test-release ./helm \
          --set django.replicaCount=1 \
          --set nextjs.replicaCount=1 \
          --set celeryWorker.replicaCount=1 > /tmp/minimal.yaml
        echo "✓ Minimal configuration validated"
