name: Deploy

on:
  push:
    branches:
      # TODO: migrate branching system to release branches
      # - master # TODO: ADD BRANCH TRIGGER
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up workflow with Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/hydrogen"

      - name: Set environment variables
        id: set-env
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            echo "SERVER_IP=TODO_IP_ADDRESS" >> $GITHUB_ENV
          else
            echo "SERVER_IP=TODO_DEV_IP_ADDRESS" >> $GITHUB_ENV
          fi

      - name: Create .env file
        run: |
          echo "ENVIRONMENT=prod" >> .env
          echo "NEXT_PUBLIC_SITE_NAME=sol" >> .env
          echo "NEXT_PUBLIC_SITE_BASE_DOMAIN=https://sol.grav.solutions" >> .env
          echo "SITE_DOMAIN=sol.grav.solutions" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "POSTGRES_DB=TODO" >> .env
          echo "POSTGRES_USER=TODO" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "EMAIL_HOST=TODO" >> .env
          echo "EMAIL_HOST_USER=TODO" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env

      - name: Create Django static directory
        run: |
          cd ./web
          pip install -r requirements.txt
          python manage.py collectstatic --noinput

      - name: Expose SSH key
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > deploy-key.pem
          else
            echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > deploy-key.pem
          fi
          chmod 400 deploy-key.pem

      - name: Sync files with server
        run: |
          rsync -r --delete --progress --exclude-from=exclude.txt -e "ssh -i $(pwd)/deploy-key.pem -o StrictHostKeyChecking=no" . ubuntu@${{ env.SERVER_IP }}:app

      - name: SSH into server; rebuild Docker containers
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
            ssh -i $(pwd)/deploy-key.pem ubuntu@${{ env.SERVER_IP }} 'cd app && docker compose -f docker-compose.yaml -f docker-compose.prod.yaml up --build -d'
          else
            ssh -i $(pwd)/deploy-key.pem ubuntu@${{ env.SERVER_IP }} 'cd app && docker compose -f docker-compose.yaml -f docker-compose.staging.yaml up --build -d'
          fi

      - name: Remove SSH key
        run: |
          rm -f deploy-key.pem

      # TODO: github image publishing pipeline
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GH_PAT }}

      # - name: Set Docker image tag
      #   id: set-tag
      #   run: |
      #     if [[ ${{ github.ref }} == 'refs/heads/master' ]]; then
      #       echo "TAG=latest" >> $GITHUB_ENV
      #     else
      #       echo "TAG=dev" >> $GITHUB_ENV
      #     fi

      # - name: Build and push Next.js Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./nextjs
      #     push: true
      #     tags: ghcr.io/${{ github.repository }}/nextjs:${{ env.TAG }}

      # - name: Build and push Nginx Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     push: true
      #     tags: ghcr.io/${{ github.repository }}/nginx:${{ env.TAG }}

      # - name: Build and push Django Docker image
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: ./django
      #     push: true
      #     tags: ghcr.io/${{ github.repository }}/django:${{ env.TAG }}
