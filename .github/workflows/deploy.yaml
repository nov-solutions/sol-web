name: Deploy

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up workflow with Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/hydrogen"

      - name: Create .env file
        run: |
          echo "ENVIRONMENT=prod" >> .env
          echo "NEXT_PUBLIC_SITE_NAME=sol" >> .env
          echo "NEXT_PUBLIC_SITE_BASE_DOMAIN=https://sol.grav.solutions" >> .env
          echo "SITE_DOMAIN=sol.grav.solutions" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "DJANGO_SETTINGS_MODULE=settings" >> .env
          echo "POSTGRES_DB=soldb" >> .env
          echo "POSTGRES_USER=soluser" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
          echo "REDIS_HOST=redis" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env

      - name: Install Python dependencies; create Django static directory
        run: |
          cd ./web
          pip install -r requirements.txt
          python manage.py collectstatic --noinput

      - name: Expose SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > app.pem
          chmod 400 app.pem

      - name: Sync files with server
        run: |
          rsync -r --delete --progress --exclude-from=exclude.txt -e "ssh -i $(pwd)/app.pem -o StrictHostKeyChecking=no" . ubuntu@IP_ADDRESS:app

      - name: SSH into server; rebuild Docker containers
        run: |
          ssh -i $(pwd)/app.pem ubuntu@IP_ADDRESS 'cd app && docker compose -f docker-compose.yaml -f docker-compose.prod.yaml up --build -d'

      - name: Clean up Docker resources
        run: |
          ssh -i $(pwd)/app.pem ubuntu@IP_ADDRESS 'cd app &&
            echo "Before cleanup stats:" &&
            docker system df &&
            docker system prune -f &&
            docker builder prune -f &&
            echo "After cleanup stats:" &&
            docker system df'

      - name: Remove SSH key
        run: |
          rm app.pem
