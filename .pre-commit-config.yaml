repos:
  # pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-merge-conflict
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: requirements-txt-fixer
      - id: trailing-whitespace

  # prettier formatters
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        types: [file]
        files: '\.(js|jsx|ts|tsx|json|yaml|md|css|html)$'

  # python linter and formatter
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black

  # python dependency sorter
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (python)
        args: [--profile, black]

  # python import and variable checker
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          [--remove-all-unused-imports, --remove-unused-variables, --in-place]

  # TODO: uncomment if the project leverages a helm chart
  # helm chart validation
  # - repo: local
  #   hooks:
  #     - id: helm-lint
  #       name: Helm Chart Linting
  #       language: system
  #       entry: bash
  #       args:
  #         - -c
  #         - |
  #           if command -v helm &> /dev/null; then
  #             helm lint ./helm
  #           else
  #             echo "Helm not installed, skipping helm lint"
  #           fi
  #       files: "^helm/.*"
  #       pass_filenames: false

  #     - id: kubeconform
  #       name: Kubeconform - Kubernetes manifest validation
  #       language: system
  #       entry: bash
  #       args:
  #         - -c
  #         - |
  #           # Check if kubeconform is installed
  #           if ! command -v kubeconform &> /dev/null; then
  #             echo "kubeconform not found. Attempting to install..."

  #             # Detect OS and ARCH
  #             OS=$(uname -s | tr '[:upper:]' '[:lower:]')
  #             ARCH=$(uname -m)
  #             if [ "$ARCH" = "x86_64" ]; then
  #               ARCH="amd64"
  #             fi

  #             VERSION="0.6.4"
  #             URL="https://github.com/yannh/kubeconform/releases/download/v${VERSION}/kubeconform-${OS}-${ARCH}.tar.gz"

  #             # Try downloading and installing
  #             if curl -sL "$URL" | tar xz -C /tmp && sudo mv /tmp/kubeconform /usr/local/bin/; then
  #               echo "kubeconform installed successfully"
  #             else
  #               echo "Failed to install kubeconform, skipping validation"
  #               exit 0
  #             fi
  #           fi

  #           # If kubeconform is installed, run validation
  #           if [ -d "./helm" ]; then
  #             echo "Validating Helm templates..."
  #             helm template test-release ./helm | kubeconform -summary -strict -verbose
  #           fi
  #       files: '^helm/.*\.yaml$'
  #       pass_filenames: false
