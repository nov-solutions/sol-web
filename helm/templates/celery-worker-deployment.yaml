{{- if .Values.celeryWorker.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sol-web.fullname" . }}-celery-worker
  labels:
    {{- include "sol-web.labels" . | nindent 4 }}
    app.kubernetes.io/component: celery-worker
spec:
  {{- if not .Values.celeryWorker.autoscaling.enabled }}
  replicas: {{ .Values.celeryWorker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sol-web.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: celery-worker
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "sol-web.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: celery-worker
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sol-web.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: celery-worker
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.django.image.repository }}:{{ .Values.django.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.django.image.pullPolicy }}
          command: ["celery", "-A", "celeryapp.celery:app", "worker", "--loglevel=info"]
          resources:
            {{- toYaml .Values.celeryWorker.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ include "sol-web.fullname" . }}-config
            - secretRef:
                name: {{ include "sol-web.fullname" . }}-secret
          env:
            - name: POSTGRES_HOST
              value: {{ include "sol-web.postgresql.fullname" . }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sol-web.postgresql.secretName" . }}
                  key: password
            - name: REDIS_HOST
              value: {{ include "sol-web.redis.fullname" . }}-master
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sol-web.redis.secretName" . }}
                  key: redis-password
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - name: media-files
              mountPath: /app/media
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: media-files
          persistentVolumeClaim:
            claimName: {{ include "sol-web.fullname" . }}-media
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
