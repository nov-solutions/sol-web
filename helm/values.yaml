global:
  environment: production
  siteName: sol
  siteBaseDomain: http://localhost
  siteDomain: localhost

# private registry settings
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

django:
  enabled: true
  replicaCount: 2

  image:
    repository: sol-web-django
    pullPolicy: IfNotPresent
    tag: "latest"

  service:
    type: ClusterIP
    port: 8000

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  env:
    DJANGO_SETTINGS_MODULE: settings
    PUBLIC_API: "False"

  secretEnv:
    SECRET_KEY: "TODO"
    EMAIL_HOST_PASSWORD: ""
    SENTRY_DSN: ""
    STRIPE_SECRET_KEY: ""
    STRIPE_WEBHOOK_SECRET: ""

nextjs:
  enabled: true
  replicaCount: 2

  image:
    repository: sol-web-nextjs
    pullPolicy: IfNotPresent
    tag: "latest"

  service:
    type: ClusterIP
    port: 3000

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

nginx:
  enabled: true
  replicaCount: 2

  image:
    repository: sol-web-nginx
    pullPolicy: IfNotPresent
    tag: "latest"

  service:
    type: LoadBalancer
    httpPort: 80
    httpsPort: 443

  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

celeryWorker:
  enabled: true
  replicaCount: 2

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80

celeryBeat:
  enabled: true
  replicaCount: 1 # ALWAYS ONE, NO DUPLICATE TASK
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi

postgresql:
  enabled: true
  auth:
    database: soldb
    username: soluser
    password: "TODO"
    postgresPassword: "TODO"

  primary:
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""

    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 512Mi

redis:
  enabled: true
  auth:
    enabled: true
    password: "TODO"

  master:
    persistence:
      enabled: true
      size: 5Gi
      storageClass: ""

    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi

  replica:
    replicaCount: 0 # Set to 1 or more for HA

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
  hosts:
    - host: sol.grav.solutions
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: sol-web-tls
      hosts:
        - sol.grav.solutions

serviceAccount:
  create: true
  annotations: {}
  name: ""

podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

volumes: []

volumeMounts: []

healthcheck:
  django:
    path: /health/
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  nextjs:
    path: /api/health
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3

persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteMany
  size: 10Gi
  # existingClaim: ""

email:
  host: smtp.sendgrid.net
  port: 587
  useTLS: true
  user: ""
  from: "TODO"

monitoring:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 30s
    path: /metrics

backup:
  enabled: false
  schedule: "0 2 * * *"
  retention: 7
